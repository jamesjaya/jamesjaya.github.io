{"version":3,"sources":["img/photo.jpg","util/SocialPlatform.ts","component/Identity.tsx","component/SocialIcon.tsx","component/SocialBar.tsx","component/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","SocialPlatform","Identity","react_default","a","createElement","className","src","photo","Component","SocialIcon","specs","this","href","url","props","platform","target","iconName","aria-hidden","Linkedin","Instagram","Facebook","Email","Resume","SocialBar","component_SocialIcon","App","component_Identity","component_SocialBar","Boolean","window","location","hostname","match","ReactDOM","render","component_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,gNCA5BC,6FCgBGC,0LAVb,OACCC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACdH,EAAAC,EAAAC,cAAA,OAAKE,IAAKC,MACVL,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,wCANmBI,8BDJXR,+HEkEGS,mLAnDb,IAAMC,EAAQC,KAAKD,QAEnB,OACCR,EAAAC,EAAAC,cAAA,KACCQ,KAAMF,EAAMG,IACZR,UAAW,QAAUM,KAAKG,MAAMC,SAChCC,OAAO,UACPd,EAAAC,EAAAC,cAAA,KACCC,UAAW,MAAQK,EAAMO,SACzBC,cAAY,0CAOf,OAAQP,KAAKG,MAAMC,UAClB,KAAKf,EAAemB,SACnB,MAAO,CACNF,SAAU,qBACVJ,IAAK,yCAEP,KAAKb,EAAeoB,UACnB,MAAO,CACNH,SAAU,eACVJ,IAAK,uCAEP,KAAKb,EAAeqB,SACnB,MAAO,CACNJ,SAAU,qBACVJ,IAAK,uCAEP,KAAKb,EAAesB,MACnB,MAAO,CACNL,SAAU,cACVJ,IAAK,2BAEP,KAAKb,EAAeuB,OACnB,MAAO,CACNN,SAAU,iBACVJ,IAAK,kBAEP,QACC,MAAO,CACNI,SAAU,qBACVJ,IAAK,iDA/CeL,aCMVgB,mLAZb,OACCtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACdH,EAAAC,EAAAC,cAACqB,EAAD,CAAYV,SAAUf,EAAemB,WACrCjB,EAAAC,EAAAC,cAACqB,EAAD,CAAYV,SAAUf,EAAeoB,YACrClB,EAAAC,EAAAC,cAACqB,EAAD,CAAYV,SAAUf,EAAeqB,WACrCnB,EAAAC,EAAAC,cAACqB,EAAD,CAAYV,SAAUf,EAAesB,QACrCpB,EAAAC,EAAAC,cAACqB,EAAD,CAAYV,SAAUf,EAAeuB,iBARjBf,aCeTkB,mLAbb,OACCxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACdH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cACjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACdH,EAAAC,EAAAC,cAACuB,EAAD,MACAzB,EAAAC,EAAAC,cAACwB,EAAD,gBAPYpB,aCOEqB,QACU,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACxB,iECZFC,IAASC,OAAOjC,EAAAC,EAAAC,cAACgC,EAAD,MAASC,SAASC,eAAe,SDyI5C,kBAAmBC,WACtBA,UAAUC,cAAcC,MAAMC,KAAK,SAACC,GACnCA,EAAaC","file":"static/js/main.31b69ec7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/photo.6c840fb1.jpg\";","export enum SocialPlatform {\n\tLinkedin = \"linkedin\",\n\tInstagram = \"instagram\",\n\tFacebook = \"facebook\",\n\tEmail = \"email\",\n\tResume = \"resume\",\n}\n","import React, { Component, ReactNode } from \"react\";\nimport photo from \"../img/photo.jpg\";\nimport \"../stylesheet/Identity.css\";\n\nclass Identity extends Component {\n\tpublic render(): ReactNode {\n\t\treturn (\n\t\t\t<div className=\"identity\">\n\t\t\t\t<img src={photo} />\n\t\t\t\t<h1>James Jaya</h1>\n\t\t\t\t<h2>Software Developer</h2>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Identity;\n","import React, { Component, CSSProperties, ReactNode } from \"react\";\nimport \"../stylesheet/SocialIcon.css\";\nimport { SocialPlatform } from \"../util/SocialPlatform\";\n\ninterface ISocialIconProps {\n\tplatform: SocialPlatform;\n}\n\ninterface IconSpecs {\n\ticonName: string;\n\turl: string;\n}\n\nclass SocialIcon extends Component<ISocialIconProps> {\n\tpublic render(): ReactNode {\n\t\tconst specs = this.specs();\n\n\t\treturn (\n\t\t\t<a\n\t\t\t\thref={specs.url}\n\t\t\t\tclassName={\"icon \" + this.props.platform}\n\t\t\t\ttarget=\"_blank\">\n\t\t\t\t<i\n\t\t\t\t\tclassName={\"fa \" + specs.iconName}\n\t\t\t\t\taria-hidden=\"true\">\n\t\t\t\t</i>\n\t\t\t</a>\n\t\t);\n\t}\n\n\tprivate specs(): IconSpecs {\n\t\tswitch (this.props.platform) {\n\t\t\tcase SocialPlatform.Linkedin:\n\t\t\t\treturn {\n\t\t\t\t\ticonName: \"fa-linkedin-square\",\n\t\t\t\t\turl: \"https://www.linkedin.com/in/jamesjaya\",\n\t\t\t\t};\n\t\t\tcase SocialPlatform.Instagram:\n\t\t\t\treturn {\n\t\t\t\t\ticonName: \"fa-instagram\",\n\t\t\t\t\turl: \"https://www.instagram.com/jamesjaya\",\n\t\t\t\t};\n\t\t\tcase SocialPlatform.Facebook:\n\t\t\t\treturn {\n\t\t\t\t\ticonName: \"fa-facebook-square\",\n\t\t\t\t\turl: \"https://www.facebook.com/james.jaya\",\n\t\t\t\t};\n\t\t\tcase SocialPlatform.Email:\n\t\t\t\treturn {\n\t\t\t\t\ticonName: \"fa-envelope\",\n\t\t\t\t\turl: \"mailto:me@jamesjaya.com\",\n\t\t\t\t};\n\t\t\tcase SocialPlatform.Resume:\n\t\t\t\treturn {\n\t\t\t\t\ticonName: \"fa-file-text-o\",\n\t\t\t\t\turl: \"file/james.pdf\",\n\t\t\t\t};\n\t\t\tdefault:\n\t\t\t\treturn {\n\t\t\t\t\ticonName: \"fa-linkedin-square\",\n\t\t\t\t\turl: \"https://www.linkedin.com/in/jamesjaya\",\n\t\t\t\t};\n\t\t}\n\t}\n}\n\nexport default SocialIcon;\n","import React, { Component, ReactNode } from \"react\";\nimport \"../stylesheet/SocialBar.css\";\nimport { SocialPlatform } from \"../util/SocialPlatform\";\nimport SocialIcon from \"./SocialIcon\";\n\nclass SocialBar extends Component {\n\tpublic render(): ReactNode {\n\t\treturn (\n\t\t\t<div className=\"social-bar\">\n\t\t\t\t<SocialIcon platform={SocialPlatform.Linkedin} />\n\t\t\t\t<SocialIcon platform={SocialPlatform.Instagram} />\n\t\t\t\t<SocialIcon platform={SocialPlatform.Facebook} />\n\t\t\t\t<SocialIcon platform={SocialPlatform.Email} />\n\t\t\t\t<SocialIcon platform={SocialPlatform.Resume} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default SocialBar;\n","import React, { Component } from \"react\";\nimport \"../stylesheet/App.css\";\nimport Identity from \"./Identity\";\nimport SocialBar from \"./SocialBar\";\n\nclass App extends Component {\n\tpublic render() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<header className=\"App-header\">\n\t\t\t\t\t<div className=\"overlay\">\n\t\t\t\t\t\t<Identity />\n\t\t\t\t\t\t<SocialBar />\n\t\t\t\t\t</div>\n\t\t\t\t</header>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === \"localhost\" ||\n\t// [::1] is the IPv6 localhost address.\n\twindow.location.hostname === \"[::1]\" ||\n\t// 127.0.0.1/8 is considered localhost for IPv4.\n\twindow.location.hostname.match(\n\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n\t),\n);\n\n// tslint:disable-next-line:interface-name\ninterface Config {\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void;\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config) {\n\tif (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(\n\t\t\t(process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n\t\t\twindow.location.href,\n\t\t);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener(\"load\", () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\t// tslint:disable-next-line:no-console\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\"This web app is being served cache-first by a service \" +\n\t\t\t\t\t\t\"worker. To learn more, visit http://bit.ly/CRA-PWA\",\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === \"installed\") {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\t// tslint:disable-next-line:no-console\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\"New content is available and will be used when all \" +\n\t\t\t\t\t\t\t\t\"tabs for this page are closed. See http://bit.ly/CRA-PWA.\",\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\t// tslint:disable-next-line:no-console\n\t\t\t\t\t\t\tconsole.log(\"Content is cached for offline use.\");\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\t// tslint:disable-next-line:no-console\n\t\t\tconsole.error(\"Error during service worker registration:\", error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get(\"content-type\");\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf(\"javascript\") === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\t// tslint:disable-next-line:no-console\n\t\t\tconsole.log(\n\t\t\t\t\"No internet connection found. App is running in offline mode.\",\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif (\"serviceWorker\" in navigator) {\n\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./component/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./stylesheet/index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}